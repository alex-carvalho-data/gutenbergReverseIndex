from datetime import datetime
from pyspark import SparkConf
from pyspark.sql import SparkSession
import logging


class ReverseIndexBuilder:
    _LOG_SEP_SIZE = 55
    HDFS_PATH = 'hdfs:///user/maria_dev/project22/dataset/*'

    def __init__(self):
        self._builder_name = 'ReverseIndexBuilder'
        self._start_time = self._log_init(self._builder_name)
        self._spark = self._create_spark_session(self._builder_name)

    @staticmethod
    def _log_init(builder_name):
        start_time = datetime.now()
        logging.basicConfig(level=logging.INFO,
                            format='%(asctime)s-%(filename)s.%(funcName)s'
                                   '-%(levelname)s-%(message)s')
        logging.info('-' * ReverseIndexBuilder._LOG_SEP_SIZE)
        log_title_sep = \
            '-' * ((ReverseIndexBuilder._LOG_SEP_SIZE - 2 - len(builder_name))
                   / 2)
        logging.info('{} {} {}{}'
                     .format(log_title_sep,
                             builder_name,
                             log_title_sep,
                             '-' if len(builder_name) % 2 == 0 else ''))
        logging.info('-' * ReverseIndexBuilder._LOG_SEP_SIZE)
        logging.info('starting...')

        return start_time

    def _log_footer(self):
        logging.info('-------------------------------------------------------')
        logging.info('start: {}'.format(self._start_time))
        logging.info('  end: {}'.format(datetime.now()))

    @staticmethod
    def _create_spark_session(app_namne):
        logging.info('retrieving SparkSession')
        conf = SparkConf().setAppName(app_namne)

        return SparkSession.builder.config(conf=conf).getOrCreate()

    def get_files_rdd(self):
        logging.info('retrieving files content')

        return self._spark.sparkContext\
            .wholeTextFiles(ReverseIndexBuilder.HDFS_PATH)

    def generate_index(self):
        print('method start')

        logging.info('retrieving files content')
        file_content_rdd = self.get_files_rdd()

        logging.info('len(file_content_rdd): {}'.format(len(file_content_rdd)))

        self._log_footer()


if __name__ == '__main__':
    revIdxBuilder = ReverseIndexBuilder()
    revIdxBuilder.generate_index()
